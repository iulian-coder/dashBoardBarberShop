{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/iulian/IdeaProjects/dashBoardBarberShop/src/pages/components/AddBooking.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport axios from \"../../api/axios\";\nimport apiRoute from \"../../api/apiRoute\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nfunction FormProfileAddBooking({\n  clientId\n}) {\n  _s();\n\n  const {\n    handleSubmit,\n    control,\n    register,\n    errors\n  } = useForm();\n  const history = useHistory();\n\n  const onSubmit = data => {\n    let BookingDTO = {\n      clientId: clientId,\n      bookingDate: data.bookingDate,\n      bookingNotes: data.bookingNotes,\n      sendSms: data.sendSms\n    };\n    addBooking(BookingDTO).then(res => {\n      localStorage.setItem(\"message\", `New booking ID:${res.id} created ${data.sendSms ? \"SMS Developer account works only with register numbers\" : \"SMS - No\"}`);\n      history.go(0);\n    }).catch(error => {\n      toast.error(\"Something went wrong ! Add Booking\");\n      history.push({\n        pathname: \"/error\",\n        state: {\n          detail: error.message\n        }\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form-horizontal\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"bookingDate\",\n        className: \"col-sm-2 col-form-label\",\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-10\",\n        children: window.innerWidth <= 500 ? /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"bookingDate\",\n          defaultValue: new Date(),\n          control: control,\n          render: ({\n            onChange,\n            value\n          }) => /*#__PURE__*/_jsxDEV(DatePicker, {\n            selected: value,\n            onChange: onChange,\n            minDate: new Date(),\n            showDisabledMonthNavigation: true,\n            disabledKeyboardNavigation: true,\n            closeOnScroll: false,\n            timeInputLabel: \"Time: \",\n            showTimeInput: true,\n            timeFormat: \"HH:mm\",\n            dateFormat: \"MMMM d, yyyy HH:mm\",\n            placeholderText: \"Click to select date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this),\n          rules: {\n            validate: data => {\n              const dateSelected = new Date(data);\n              const dateNow = new Date();\n              return dateSelected.valueOf() >= dateNow.valueOf();\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"bookingDate\",\n          defaultValue: new Date(),\n          control: control,\n          render: ({\n            onChange,\n            value\n          }) => /*#__PURE__*/_jsxDEV(DatePicker, {\n            selected: value,\n            onChange: onChange,\n            minDate: new Date(),\n            showDisabledMonthNavigation: true,\n            disabledKeyboardNavigation: true,\n            closeOnScroll: false,\n            showTimeSelect: true,\n            timeFormat: \"HH:mm\",\n            dateFormat: \"MMMM d, yyyy HH:mm\",\n            placeholderText: \"Click to select date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this),\n          rules: {\n            validate: data => {\n              const dateSelected = new Date(data);\n              const dateNow = new Date();\n              return dateSelected.valueOf() >= dateNow.valueOf();\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), errors.bookingDate && /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"text-danger\",\n        children: \"The date must be in the future!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        htmlFor: \"flexCheckDefault\",\n        children: \"Send SMS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"sendSms\",\n          ref: register,\n          className: \"form-check-input\",\n          type: \"checkbox\",\n          defaultValue: true,\n          id: \"flexCheckDefault\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inputBookingNotes\",\n        className: \"col-sm-2 col-form-label\",\n        children: \"Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"inputSpecialRequest\",\n          placeholder: \"Notes\",\n          name: \"bookingNotes\",\n          ref: register({\n            maxLength: {\n              message: \"This field cannot be longer then 70 characters\",\n              value: 70\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), errors.bookingNotes && /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"text-danger\",\n          children: errors.bookingNotes.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"offset-sm-2 col-sm-10\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormProfileAddBooking, \"3AJphcddZw4qFCjr9AQBMTAxvog=\", false, function () {\n  return [useForm, useHistory];\n});\n\n_c = FormProfileAddBooking;\nexport default FormProfileAddBooking;\n\nasync function addBooking(data) {\n  const responseData = await axios.post(apiRoute.bookings, data);\n  return responseData.data;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"FormProfileAddBooking\");","map":{"version":3,"sources":["/home/iulian/IdeaProjects/dashBoardBarberShop/src/pages/components/AddBooking.js"],"names":["React","useForm","Controller","axios","apiRoute","DatePicker","useHistory","toast","FormProfileAddBooking","clientId","handleSubmit","control","register","errors","history","onSubmit","data","BookingDTO","bookingDate","bookingNotes","sendSms","addBooking","then","res","localStorage","setItem","id","go","catch","error","push","pathname","state","detail","message","window","innerWidth","Date","onChange","value","validate","dateSelected","dateNow","valueOf","maxLength","responseData","post","bookings"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport axios from \"../../api/axios\";\nimport apiRoute from \"../../api/apiRoute\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nfunction FormProfileAddBooking({ clientId }) {\n  const { handleSubmit, control, register, errors } = useForm();\n  const history = useHistory();\n\n  const onSubmit = (data) => {\n    let BookingDTO = {\n      clientId: clientId,\n      bookingDate: data.bookingDate,\n      bookingNotes: data.bookingNotes,\n      sendSms: data.sendSms,\n    };\n    addBooking(BookingDTO)\n      .then((res) => {\n        localStorage.setItem(\n          \"message\",\n          `New booking ID:${res.id} created ${\n            data.sendSms\n              ? \"SMS Developer account works only with register numbers\"\n              : \"SMS - No\"\n          }`\n        );\n\n        history.go(0);\n      })\n      .catch((error) => {\n        toast.error(\"Something went wrong ! Add Booking\");\n        history.push({\n          pathname: \"/error\",\n          state: { detail: error.message },\n        });\n      });\n  };\n\n  return (\n    <form className=\"form-horizontal\" onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"form-group row\">\n        <label htmlFor=\"bookingDate\" className=\"col-sm-2 col-form-label\">\n          Date\n        </label>\n        <div className=\"col-sm-10\">\n          {window.innerWidth <= 500 ? (\n            <Controller\n              name=\"bookingDate\"\n              defaultValue={new Date()}\n              control={control}\n              render={({ onChange, value }) => (\n                <DatePicker\n                  selected={value}\n                  onChange={onChange}\n                  minDate={new Date()}\n                  showDisabledMonthNavigation\n                  disabledKeyboardNavigation\n                  closeOnScroll={false}\n                  timeInputLabel=\"Time: \"\n                  showTimeInput\n                  timeFormat=\"HH:mm\"\n                  dateFormat=\"MMMM d, yyyy HH:mm\"\n                  placeholderText=\"Click to select date\"\n                />\n              )}\n              rules={{\n                validate: (data) => {\n                  const dateSelected = new Date(data);\n                  const dateNow = new Date();\n                  return dateSelected.valueOf() >= dateNow.valueOf();\n                },\n              }}\n            />\n          ) : (\n            <Controller\n              name=\"bookingDate\"\n              defaultValue={new Date()}\n              control={control}\n              render={({ onChange, value }) => (\n                <DatePicker\n                  selected={value}\n                  onChange={onChange}\n                  minDate={new Date()}\n                  showDisabledMonthNavigation\n                  disabledKeyboardNavigation\n                  closeOnScroll={false}\n                  showTimeSelect\n                  timeFormat=\"HH:mm\"\n                  dateFormat=\"MMMM d, yyyy HH:mm\"\n                  placeholderText=\"Click to select date\"\n                />\n              )}\n              rules={{\n                validate: (data) => {\n                  const dateSelected = new Date(data);\n                  const dateNow = new Date();\n                  return dateSelected.valueOf() >= dateNow.valueOf();\n                },\n              }}\n            />\n          )}\n        </div>\n        {errors.bookingDate && (\n          <small className=\"text-danger\">The date must be in the future!</small>\n        )}\n      </div>\n      <div className=\"form-group row\">\n        <label className=\"col-sm-2 col-form-label\" htmlFor=\"flexCheckDefault\">\n          Send SMS\n        </label>\n        <div className=\"form-check\">\n          <input\n            name=\"sendSms\"\n            ref={register}\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            defaultValue\n            id=\"flexCheckDefault\"\n          />\n        </div>\n      </div>\n      <div className=\"form-group row\">\n        <label htmlFor=\"inputBookingNotes\" className=\"col-sm-2 col-form-label\">\n          Notes\n        </label>\n        <div className=\"col-sm-10\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"inputSpecialRequest\"\n            placeholder=\"Notes\"\n            name=\"bookingNotes\"\n            ref={register({\n              maxLength: {\n                message: \"This field cannot be longer then 70 characters\",\n                value: 70,\n              },\n            })}\n          />\n          {errors.bookingNotes && (\n            <small className=\"text-danger\">{errors.bookingNotes.message}</small>\n          )}\n        </div>\n      </div>\n      <div className=\"form-group row\">\n        <div className=\"offset-sm-2 col-sm-10\">\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default FormProfileAddBooking;\n\nasync function addBooking(data) {\n  const responseData = await axios.post(apiRoute.bookings, data);\n  return responseData.data;\n}\n"]},"metadata":{},"sourceType":"module"}