{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/iulian/IdeaProjects/dashBoardBarberShop/src/pages/components/FormProfileAddBooking.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport axios from \"../../api/axios\";\nimport apiRoute from \"../../api/apiRoute\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nfunction FormProfileAddBooking({\n  clientId\n}) {\n  _s();\n\n  const {\n    handleSubmit,\n    control,\n    register,\n    errors\n  } = useForm();\n\n  const onSubmit = data => {\n    let BookingDTO = {\n      clientId: clientId,\n      bookingDate: data.bookingDate,\n      bookingNotes: data.bookingNotes\n    };\n    addBooking(BookingDTO).then(() => {\n      window.location.reload();\n    }).catch(error => {\n      console.log(error);\n    });\n  }; // console.log(window.innerWidth);\n  // 500\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form-horizontal\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"bookingDate\",\n        className: \"col-sm-2 col-form-label\",\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-10\",\n        children: [window.innerWidth, /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"bookingDate\",\n          defaultValue: new Date(),\n          control: control,\n          render: ({\n            onChange,\n            value\n          }) => /*#__PURE__*/_jsxDEV(DatePicker, {\n            selected: value,\n            onChange: onChange,\n            minDate: new Date(),\n            showDisabledMonthNavigation: true,\n            disabledKeyboardNavigation: true,\n            closeOnScroll: false,\n            timeInputLabel: \"Time: \",\n            showTimeSelect: true,\n            timeFormat: \"HH:mm\",\n            dateFormat: \"MMMM d, yyyy HH:mm\",\n            placeholderText: \"Click to select date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this),\n          rules: {\n            validate: data => {\n              const dateSelected = new Date(data);\n              const dateNow = new Date();\n              return dateSelected.valueOf() >= dateNow.valueOf();\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), errors.bookingDate && /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"text-danger\",\n        children: \"The date must be in the future!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inputBookingNotes\",\n        className: \"col-sm-2 col-form-label\",\n        children: \"Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"inputSpecialRequest\",\n          placeholder: \"Notes\",\n          name: \"bookingNotes\",\n          ref: register({\n            maxLength: {\n              message: \"This field cannot be longer then 70 characters\",\n              value: 70\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), errors.bookingNotes && /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"text-danger\",\n          children: errors.bookingNotes.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"offset-sm-2 col-sm-10\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormProfileAddBooking, \"ZickWV1TDMqiXGc4CAnOY58KrLY=\", false, function () {\n  return [useForm];\n});\n\n_c = FormProfileAddBooking;\nexport default FormProfileAddBooking;\n\nasync function addBooking(data) {\n  const responseData = await axios.post(apiRoute.bookings, data);\n  return responseData.data;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"FormProfileAddBooking\");","map":{"version":3,"sources":["/home/iulian/IdeaProjects/dashBoardBarberShop/src/pages/components/FormProfileAddBooking.js"],"names":["React","useForm","Controller","axios","apiRoute","DatePicker","FormProfileAddBooking","clientId","handleSubmit","control","register","errors","onSubmit","data","BookingDTO","bookingDate","bookingNotes","addBooking","then","window","location","reload","catch","error","console","log","innerWidth","Date","onChange","value","validate","dateSelected","dateNow","valueOf","maxLength","message","responseData","post","bookings"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,iBAApC;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;;AAEA,SAASC,qBAAT,CAA+B;AAAEC,EAAAA;AAAF,CAA/B,EAA6C;AAAA;;AAC3C,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,OAAhB;AAAyBC,IAAAA,QAAzB;AAAmCC,IAAAA;AAAnC,MAA8CV,OAAO,EAA3D;;AAEA,QAAMW,QAAQ,GAAIC,IAAD,IAAU;AACzB,QAAIC,UAAU,GAAG;AACfP,MAAAA,QAAQ,EAAEA,QADK;AAEfQ,MAAAA,WAAW,EAAEF,IAAI,CAACE,WAFH;AAGfC,MAAAA,YAAY,EAAEH,IAAI,CAACG;AAHJ,KAAjB;AAKAC,IAAAA,UAAU,CAACH,UAAD,CAAV,CACGI,IADH,CACQ,MAAM;AACVC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,KAHH,EAIGC,KAJH,CAIUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KANH;AAOD,GAbD,CAH2C,CAiB3C;AACA;;;AAEA,sBACE;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAkC,IAAA,QAAQ,EAAEf,YAAY,CAACI,QAAD,CAAxD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,aAAf;AAA6B,QAAA,SAAS,EAAC,yBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,mBACGO,MAAM,CAACO,UADV,eAEE,QAAC,UAAD;AACE,UAAA,IAAI,EAAC,aADP;AAEE,UAAA,YAAY,EAAE,IAAIC,IAAJ,EAFhB;AAGE,UAAA,OAAO,EAAElB,OAHX;AAIE,UAAA,MAAM,EAAE,CAAC;AAAEmB,YAAAA,QAAF;AAAYC,YAAAA;AAAZ,WAAD,kBACN,QAAC,UAAD;AACE,YAAA,QAAQ,EAAEA,KADZ;AAEE,YAAA,QAAQ,EAAED,QAFZ;AAGE,YAAA,OAAO,EAAE,IAAID,IAAJ,EAHX;AAIE,YAAA,2BAA2B,MAJ7B;AAKE,YAAA,0BAA0B,MAL5B;AAME,YAAA,aAAa,EAAE,KANjB;AAOE,YAAA,cAAc,EAAC,QAPjB;AAQE,YAAA,cAAc,MARhB;AASE,YAAA,UAAU,EAAC,OATb;AAUE,YAAA,UAAU,EAAC,oBAVb;AAWE,YAAA,eAAe,EAAC;AAXlB;AAAA;AAAA;AAAA;AAAA,kBALJ;AAmBE,UAAA,KAAK,EAAE;AACLG,YAAAA,QAAQ,EAAGjB,IAAD,IAAU;AAClB,oBAAMkB,YAAY,GAAG,IAAIJ,IAAJ,CAASd,IAAT,CAArB;AACA,oBAAMmB,OAAO,GAAG,IAAIL,IAAJ,EAAhB;AACA,qBAAOI,YAAY,CAACE,OAAb,MAA0BD,OAAO,CAACC,OAAR,EAAjC;AACD;AALI;AAnBT;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,EAkCGtB,MAAM,CAACI,WAAP,iBACC;AAAO,QAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAuCE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAvCF,eAwCE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,mBAAf;AAAmC,QAAA,SAAS,EAAC,yBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,SAAS,EAAC,cAFZ;AAGE,UAAA,EAAE,EAAC,qBAHL;AAIE,UAAA,WAAW,EAAC,OAJd;AAKE,UAAA,IAAI,EAAC,cALP;AAME,UAAA,GAAG,EAAEL,QAAQ,CAAC;AACZwB,YAAAA,SAAS,EAAE;AACTC,cAAAA,OAAO,EAAE,gDADA;AAETN,cAAAA,KAAK,EAAE;AAFE;AADC,WAAD;AANf;AAAA;AAAA;AAAA;AAAA,gBADF,EAcGlB,MAAM,CAACK,YAAP,iBACC;AAAO,UAAA,SAAS,EAAC,aAAjB;AAAA,oBAAgCL,MAAM,CAACK,YAAP,CAAoBmB;AAApD;AAAA;AAAA;AAAA;AAAA,gBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAxCF,eA+DE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,+BACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA/DF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyED;;GA7FQ7B,qB;UAC6CL,O;;;KAD7CK,qB;AA+FT,eAAeA,qBAAf;;AAEA,eAAeW,UAAf,CAA0BJ,IAA1B,EAAgC;AAC9B,QAAMuB,YAAY,GAAG,MAAMjC,KAAK,CAACkC,IAAN,CAAWjC,QAAQ,CAACkC,QAApB,EAA8BzB,IAA9B,CAA3B;AACA,SAAOuB,YAAY,CAACvB,IAApB;AACD","sourcesContent":["import React from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport axios from \"../../api/axios\";\nimport apiRoute from \"../../api/apiRoute\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nfunction FormProfileAddBooking({ clientId }) {\n  const { handleSubmit, control, register, errors } = useForm();\n\n  const onSubmit = (data) => {\n    let BookingDTO = {\n      clientId: clientId,\n      bookingDate: data.bookingDate,\n      bookingNotes: data.bookingNotes,\n    };\n    addBooking(BookingDTO)\n      .then(() => {\n        window.location.reload();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  // console.log(window.innerWidth);\n  // 500\n  \n  return (\n    <form className=\"form-horizontal\" onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"form-group row\">\n        <label htmlFor=\"bookingDate\" className=\"col-sm-2 col-form-label\">\n          Date\n        </label>\n        <div className=\"col-sm-10\">\n          {window.innerWidth}\n          <Controller\n            name=\"bookingDate\"\n            defaultValue={new Date()}\n            control={control}\n            render={({ onChange, value }) => (\n              <DatePicker\n                selected={value}\n                onChange={onChange}\n                minDate={new Date()}\n                showDisabledMonthNavigation\n                disabledKeyboardNavigation\n                closeOnScroll={false}\n                timeInputLabel=\"Time: \"\n                showTimeSelect\n                timeFormat=\"HH:mm\"\n                dateFormat=\"MMMM d, yyyy HH:mm\"\n                placeholderText=\"Click to select date\"\n              />\n            )}\n            rules={{\n              validate: (data) => {\n                const dateSelected = new Date(data);\n                const dateNow = new Date();\n                return dateSelected.valueOf() >= dateNow.valueOf();\n              },\n            }}\n          />\n        </div>\n        {errors.bookingDate && (\n          <small className=\"text-danger\">The date must be in the future!</small>\n        )}\n      </div>\n      <div className=\"form-group row\"></div>\n      <div className=\"form-group row\">\n        <label htmlFor=\"inputBookingNotes\" className=\"col-sm-2 col-form-label\">\n          Notes\n        </label>\n        <div className=\"col-sm-10\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"inputSpecialRequest\"\n            placeholder=\"Notes\"\n            name=\"bookingNotes\"\n            ref={register({\n              maxLength: {\n                message: \"This field cannot be longer then 70 characters\",\n                value: 70,\n              },\n            })}\n          />\n          {errors.bookingNotes && (\n            <small className=\"text-danger\">{errors.bookingNotes.message}</small>\n          )}\n        </div>\n      </div>\n      <div className=\"form-group row\">\n        <div className=\"offset-sm-2 col-sm-10\">\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default FormProfileAddBooking;\n\nasync function addBooking(data) {\n  const responseData = await axios.post(apiRoute.bookings, data);\n  return responseData.data;\n}\n"]},"metadata":{},"sourceType":"module"}