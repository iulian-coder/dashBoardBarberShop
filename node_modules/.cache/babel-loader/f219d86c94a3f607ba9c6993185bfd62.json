{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/iulian/IdeaProjects/dashBoardBarberShop/src/pages/components/FormProfileModify.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport axios from \"../../api/axios\";\nimport apiRoute from \"../../api/apiRoute\";\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\n\nfunction FormProfileModify({\n  clientData\n}) {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    errors\n  } = useForm();\n  const history = useHistory();\n\n  const onSubmit = formData => {\n    let updateData = {\n      clientId: clientData.clientId,\n      firstName: formData.firstName,\n      lastName: formData.lastName,\n      email: formData.email,\n      phoneNo: formData.phoneNo\n    };\n    updateClient(updateData).then(res => {// localStorage.setItem(\n      //   \"message\",\n      //   `Client profile ID:${res.clientId} updated`\n      // );\n      // history.go(0);\n    }).catch(error => {\n      toast.error(\"Something went wrong! Modify profile\");\n      history.push({\n        pathname: \"/error\",\n        state: {\n          detail: error.message\n        }\n      });\n    });\n  }; // Validate phone number\n\n\n  const validate = data => {\n    console.log(data);\n    return data.match(/^(\\+?4?0)\\s?7\\d{2}(\\/|\\s|\\.|\\-)?\\d{3}(\\s|\\.|\\-)?\\d{3}$/);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form-horizontal\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inputFirstName\",\n        className: \"col-sm-2 col-form-label\",\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"inputFirstName\",\n          defaultValue: clientData.firstName,\n          placeholder: \"First Name\",\n          name: \"firstName\",\n          ref: register({\n            required: {\n              message: \"This field is required\",\n              value: true\n            },\n            maxLength: {\n              message: \"This field cannot exceed 20 characters\",\n              value: 20\n            },\n            minLength: {\n              message: \"This field cannot be less then 3 characters\",\n              value: 3\n            },\n            pattern: {\n              message: \"Alphabetical characters only\",\n              value: /^[A-Za-z]+$/i\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), errors.firstName && /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"text-danger\",\n          children: errors.firstName.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inputLastName\",\n        className: \"col-sm-2 col-form-label\",\n        children: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"inputLastName\",\n          placeholder: \"Last Name\",\n          defaultValue: clientData.lastName,\n          name: \"lastName\",\n          ref: register({\n            required: {\n              message: \"This field is required\",\n              value: true\n            },\n            maxLength: {\n              message: \"This field cannot exceed 20 characters\",\n              value: 20\n            },\n            minLength: {\n              message: \"This field cannot be less then 3 characters\",\n              value: 3\n            },\n            pattern: {\n              message: \"Alphabetical characters only\",\n              value: /^[A-Za-z]+$/i\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), errors.lastName && /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"text-danger\",\n          children: errors.lastName.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inputEmail\",\n        className: \"col-sm-2 col-form-label\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: \"form-control\",\n          name: \"email\",\n          id: \"inputEmail\",\n          placeholder: \"Email\",\n          defaultValue: clientData.email,\n          ref: register({\n            required: {\n              message: \"This field is required\",\n              value: true\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"text-danger\",\n          children: errors.email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inputPhoneNo\",\n        className: \"col-sm-2 col-form-label\",\n        children: \"Phone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-10\",\n        children: [errors.phoneNo && /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"text-danger\",\n          children: errors.phoneNo.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"phoneNo\",\n          control: control,\n          defaultValue: false,\n          render: ({\n            onChange\n          }) => /*#__PURE__*/_jsxDEV(PhoneInput, {\n            placeholder: \"Enter phone number\",\n            defaultCountry: \"ro\",\n            regions: \"europe\",\n            countryCodeEditable: false,\n            onChange: onChange,\n            value: clientData.phoneNo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this),\n          rules: {\n            validate\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"offset-sm-2 col-sm-10\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormProfileModify, \"dt3GOujZes+sIvaYvOLA6FQp7UA=\", false, function () {\n  return [useForm, useHistory];\n});\n\n_c = FormProfileModify;\nexport default FormProfileModify;\n\nasync function updateClient(updateData) {\n  const dataResponse = await axios.put(apiRoute.clients, updateData);\n  return dataResponse.data;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"FormProfileModify\");","map":{"version":3,"sources":["/home/iulian/IdeaProjects/dashBoardBarberShop/src/pages/components/FormProfileModify.js"],"names":["React","useForm","Controller","axios","apiRoute","useHistory","toast","PhoneInput","FormProfileModify","clientData","register","handleSubmit","control","errors","history","onSubmit","formData","updateData","clientId","firstName","lastName","email","phoneNo","updateClient","then","res","catch","error","push","pathname","state","detail","message","validate","data","console","log","match","required","value","maxLength","minLength","pattern","onChange","dataResponse","put","clients"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport axios from \"../../api/axios\";\nimport apiRoute from \"../../api/apiRoute\";\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\n\nfunction FormProfileModify({ clientData }) {\n  const { register, handleSubmit, control, errors } = useForm();\n  const history = useHistory();\n\n  const onSubmit = (formData) => {\n    let updateData = {\n      clientId: clientData.clientId,\n      firstName: formData.firstName,\n      lastName: formData.lastName,\n      email: formData.email,\n      phoneNo: formData.phoneNo,\n    };\n    updateClient(updateData)\n      .then((res) => {\n        // localStorage.setItem(\n        //   \"message\",\n        //   `Client profile ID:${res.clientId} updated`\n        // );\n        // history.go(0);\n      })\n      .catch((error) => {\n        toast.error(\"Something went wrong! Modify profile\");\n        history.push({\n          pathname: \"/error\",\n          state: { detail: error.message },\n        });\n      });\n  };\n\n  // Validate phone number\n  const validate = (data) => {\n    console.log(data);\n    return data.match( /^(\\+?4?0)\\s?7\\d{2}(\\/|\\s|\\.|\\-)?\\d{3}(\\s|\\.|\\-)?\\d{3}$/,\n    );\n  };\n  return (\n    <form className=\"form-horizontal\" onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"form-group row\">\n        <label htmlFor=\"inputFirstName\" className=\"col-sm-2 col-form-label\">\n          First Name\n        </label>\n        <div className=\"col-sm-10\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"inputFirstName\"\n            defaultValue={clientData.firstName}\n            placeholder=\"First Name\"\n            name=\"firstName\"\n            ref={register({\n              required: { message: \"This field is required\", value: true },\n              maxLength: {\n                message: \"This field cannot exceed 20 characters\",\n                value: 20,\n              },\n              minLength: {\n                message: \"This field cannot be less then 3 characters\",\n                value: 3,\n              },\n              pattern: {\n                message: \"Alphabetical characters only\",\n                value: /^[A-Za-z]+$/i,\n              },\n            })}\n          />\n          {errors.firstName && (\n            <small className=\"text-danger\">{errors.firstName.message}</small>\n          )}\n        </div>\n      </div>\n      <div className=\"form-group row\">\n        <label htmlFor=\"inputLastName\" className=\"col-sm-2 col-form-label\">\n          Last Name\n        </label>\n        <div className=\"col-sm-10\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"inputLastName\"\n            placeholder=\"Last Name\"\n            defaultValue={clientData.lastName}\n            name=\"lastName\"\n            ref={register({\n              required: { message: \"This field is required\", value: true },\n              maxLength: {\n                message: \"This field cannot exceed 20 characters\",\n                value: 20,\n              },\n              minLength: {\n                message: \"This field cannot be less then 3 characters\",\n                value: 3,\n              },\n              pattern: {\n                message: \"Alphabetical characters only\",\n                value: /^[A-Za-z]+$/i,\n              },\n            })}\n          />\n          {errors.lastName && (\n            <small className=\"text-danger\">{errors.lastName.message}</small>\n          )}\n        </div>\n      </div>\n      <div className=\"form-group row\">\n        <label htmlFor=\"inputEmail\" className=\"col-sm-2 col-form-label\">\n          Email\n        </label>\n        <div className=\"col-sm-10\">\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            name=\"email\"\n            id=\"inputEmail\"\n            placeholder=\"Email\"\n            defaultValue={clientData.email}\n            ref={register({\n              required: { message: \"This field is required\", value: true },\n            })}\n          />\n          {errors.email && (\n            <small className=\"text-danger\">{errors.email.message}</small>\n          )}\n        </div>\n      </div>\n      <div className=\"form-group row\">\n        <label htmlFor=\"inputPhoneNo\" className=\"col-sm-2 col-form-label\">\n          Phone\n        </label>\n        <div className=\"col-sm-10\">\n          {errors.phoneNo && (\n            <small className=\"text-danger\">{errors.phoneNo.message}</small>\n          )}\n\n          <Controller\n            name=\"phoneNo\"\n            control={control}\n            defaultValue={false}\n            render={({ onChange }) => (\n              <PhoneInput\n                placeholder=\"Enter phone number\"\n                defaultCountry=\"ro\"\n                regions=\"europe\"\n                countryCodeEditable={false}\n                onChange={onChange}\n                value={clientData.phoneNo}\n              />\n            )}\n            rules={{validate}}\n          />\n        </div>\n      </div>\n      <div className=\"form-group row\">\n        <div className=\"offset-sm-2 col-sm-10\">\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Update\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default FormProfileModify;\n\nasync function updateClient(updateData) {\n  const dataResponse = await axios.put(apiRoute.clients, updateData);\n  return dataResponse.data;\n}\n"]},"metadata":{},"sourceType":"module"}