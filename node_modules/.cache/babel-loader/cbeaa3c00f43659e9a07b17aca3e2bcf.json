{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/iulian/IdeaProjects/dashBoardBarberShop/src/pages/components/ModifyProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport axios from \"../../api/axios\";\nimport apiRoute from \"../../api/apiRoute\";\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\n\nfunction FormProfileModify({\n  clientId\n}) {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    errors\n  } = useForm({\n    defaultValues: {\n      firstName: \"\",\n      phoneNo: \"\"\n    }\n  });\n  const history = useHistory();\n  useEffect(() => {\n    as;\n  }, []);\n\n  const onSubmit = formData => {\n    let updateData = {\n      clientId: clientId,\n      firstName: formData.firstName,\n      lastName: formData.lastName,\n      email: formData.email,\n      phoneNo: formData.phoneNo\n    };\n    updateClient(updateData).then(res => {\n      localStorage.setItem(\"message\", `Client profile ID:${res.clientId} updated`);\n      history.go(0);\n    }).catch(error => {\n      toast.error(\"Something went wrong! Modify profile\");\n      history.push({\n        pathname: \"/error\",\n        state: {\n          detail: error.message\n        }\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form-horizontal\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inputFirstName\",\n        className: \"col-sm-2 col-form-label\",\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"inputFirstName\" // defaultValue={clientData.firstName}\n          ,\n          placeholder: \"First Name\",\n          name: \"firstName\",\n          ref: register({\n            required: {\n              message: \"This field is required\",\n              value: true\n            },\n            maxLength: {\n              message: \"This field cannot exceed 20 characters\",\n              value: 20\n            },\n            minLength: {\n              message: \"This field cannot be less then 3 characters\",\n              value: 3\n            },\n            pattern: {\n              message: \"Alphabetical characters only\",\n              value: /^[A-Za-z]+$/i\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), errors.firstName && /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"text-danger\",\n          children: errors.firstName.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inputLastName\",\n        className: \"col-sm-2 col-form-label\",\n        children: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"inputLastName\",\n          placeholder: \"Last Name\",\n          defaultValue: clientData.lastName,\n          name: \"lastName\",\n          ref: register({\n            required: {\n              message: \"This field is required\",\n              value: true\n            },\n            maxLength: {\n              message: \"This field cannot exceed 20 characters\",\n              value: 20\n            },\n            minLength: {\n              message: \"This field cannot be less then 3 characters\",\n              value: 3\n            },\n            pattern: {\n              message: \"Alphabetical characters only\",\n              value: /^[A-Za-z]+$/i\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), errors.lastName && /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"text-danger\",\n          children: errors.lastName.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inputEmail\",\n        className: \"col-sm-2 col-form-label\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: \"form-control\",\n          name: \"email\",\n          id: \"inputEmail\",\n          placeholder: \"Email\",\n          defaultValue: clientData.email,\n          ref: register({\n            required: {\n              message: \"This field is required\",\n              value: true\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"text-danger\",\n          children: errors.email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inputPhoneNo\",\n        className: \"col-sm-2 col-form-label\",\n        children: \"Phone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-10\",\n        children: [errors.phoneNo && /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"text-danger\",\n          children: \"Please write the phone !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"phoneNo\",\n          control: control,\n          render: ({\n            onSubmit,\n            onChange,\n            value\n          }) => /*#__PURE__*/_jsxDEV(PhoneInput, {\n            placeholder: \"Enter phone number\",\n            country: \"ro\",\n            onlyCountries: [\"ro\"],\n            countryCodeEditable: false,\n            onChange: onChange,\n            onSubmit: onSubmit,\n            value: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this),\n          rules: {\n            validate: data => {\n              // Regex Romania country\n              const regex = new RegExp(/^(\\+?4?0)\\s?7\\d{2}(\\/|\\s|\\.|-)?\\d{3}(\\s|\\.|-)?\\d{3}$/);\n              return regex.test(data);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"offset-sm-2 col-sm-10\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormProfileModify, \"elA2Hn5I2xEyqcYmRorJvqekUs8=\", false, function () {\n  return [useForm, useHistory];\n});\n\n_c = FormProfileModify;\nexport default FormProfileModify;\n\nasync function updateClient(updateData) {\n  const dataResponse = await axios.put(apiRoute.clients, updateData);\n  return dataResponse.data;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"FormProfileModify\");","map":{"version":3,"sources":["/home/iulian/IdeaProjects/dashBoardBarberShop/src/pages/components/ModifyProfile.js"],"names":["React","useEffect","useForm","Controller","axios","apiRoute","useHistory","toast","PhoneInput","FormProfileModify","clientId","register","handleSubmit","control","errors","defaultValues","firstName","phoneNo","history","as","onSubmit","formData","updateData","lastName","email","updateClient","then","res","localStorage","setItem","go","catch","error","push","pathname","state","detail","message","required","value","maxLength","minLength","pattern","clientData","onChange","validate","data","regex","RegExp","test","dataResponse","put","clients"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport axios from \"../../api/axios\";\nimport apiRoute from \"../../api/apiRoute\";\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\n\nfunction FormProfileModify({clientId}) {\n  const { register, handleSubmit, control, errors } = useForm({\n    defaultValues: { firstName: \"\", phoneNo: \"\" },\n  });\n\n  const history = useHistory();\n\n\n useEffect(() => {\nas\n\n }, [])\n\n\n\n\n  const onSubmit = (formData) => {\n    let updateData = {\n      clientId: clientId,\n      firstName: formData.firstName,\n      lastName: formData.lastName,\n      email: formData.email,\n      phoneNo: formData.phoneNo,\n    };\n    updateClient(updateData)\n      .then((res) => {\n        localStorage.setItem(\n          \"message\",\n          `Client profile ID:${res.clientId} updated`\n        );\n        history.go(0);\n      })\n      .catch((error) => {\n        toast.error(\"Something went wrong! Modify profile\");\n        history.push({\n          pathname: \"/error\",\n          state: { detail: error.message },\n        });\n      });\n  };\n\n  return (\n    <form className=\"form-horizontal\" onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"form-group row\">\n        <label htmlFor=\"inputFirstName\" className=\"col-sm-2 col-form-label\">\n          First Name\n        </label>\n        <div className=\"col-sm-10\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"inputFirstName\"\n            // defaultValue={clientData.firstName}\n            placeholder=\"First Name\"\n            name=\"firstName\"\n            ref={register({\n              required: { message: \"This field is required\", value: true },\n              maxLength: {\n                message: \"This field cannot exceed 20 characters\",\n                value: 20,\n              },\n              minLength: {\n                message: \"This field cannot be less then 3 characters\",\n                value: 3,\n              },\n              pattern: {\n                message: \"Alphabetical characters only\",\n                value: /^[A-Za-z]+$/i,\n              },\n            })}\n          />\n          {errors.firstName && (\n            <small className=\"text-danger\">{errors.firstName.message}</small>\n          )}\n        </div>\n      </div>\n      <div className=\"form-group row\">\n        <label htmlFor=\"inputLastName\" className=\"col-sm-2 col-form-label\">\n          Last Name\n        </label>\n        <div className=\"col-sm-10\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"inputLastName\"\n            placeholder=\"Last Name\"\n            defaultValue={clientData.lastName}\n            name=\"lastName\"\n            ref={register({\n              required: { message: \"This field is required\", value: true },\n              maxLength: {\n                message: \"This field cannot exceed 20 characters\",\n                value: 20,\n              },\n              minLength: {\n                message: \"This field cannot be less then 3 characters\",\n                value: 3,\n              },\n              pattern: {\n                message: \"Alphabetical characters only\",\n                value: /^[A-Za-z]+$/i,\n              },\n            })}\n          />\n          {errors.lastName && (\n            <small className=\"text-danger\">{errors.lastName.message}</small>\n          )}\n        </div>\n      </div>\n      <div className=\"form-group row\">\n        <label htmlFor=\"inputEmail\" className=\"col-sm-2 col-form-label\">\n          Email\n        </label>\n        <div className=\"col-sm-10\">\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            name=\"email\"\n            id=\"inputEmail\"\n            placeholder=\"Email\"\n            defaultValue={clientData.email}\n            ref={register({\n              required: { message: \"This field is required\", value: true },\n            })}\n          />\n          {errors.email && (\n            <small className=\"text-danger\">{errors.email.message}</small>\n          )}\n        </div>\n      </div>\n      <div className=\"form-group row\">\n        <label htmlFor=\"inputPhoneNo\" className=\"col-sm-2 col-form-label\">\n          Phone\n        </label>\n        <div className=\"col-sm-10\">\n          {errors.phoneNo && (\n            <small className=\"text-danger\">Please write the phone !</small>\n          )}\n\n          <Controller\n            name=\"phoneNo\"\n            control={control}\n            render={({ onSubmit, onChange, value }) => (\n              <PhoneInput\n                placeholder=\"Enter phone number\"\n                country=\"ro\"\n                onlyCountries={[\"ro\"]}\n                countryCodeEditable={false}\n                onChange={onChange}\n                onSubmit={onSubmit}\n                value={value}\n              />\n            )}\n            rules={{\n              validate: (data) => {\n                // Regex Romania country\n                const regex = new RegExp(\n                  /^(\\+?4?0)\\s?7\\d{2}(\\/|\\s|\\.|-)?\\d{3}(\\s|\\.|-)?\\d{3}$/\n                );\n\n                return regex.test(data);\n              },\n            }}\n          />\n        </div>\n      </div>\n      <div className=\"form-group row\">\n        <div className=\"offset-sm-2 col-sm-10\">\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Update\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default FormProfileModify;\n\nasync function updateClient(updateData) {\n  const dataResponse = await axios.put(apiRoute.clients, updateData);\n  return dataResponse.data;\n}\n"]},"metadata":{},"sourceType":"module"}