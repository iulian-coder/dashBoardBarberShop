{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/iulian/IdeaProjects/dashBoardBarberShop/src/pages/AddClient.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"../api/axios\";\nimport apiRoute from \"../api/apiRoute\";\nimport { useHistory } from \"react-router-dom\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { toast } from \"react-toastify\";\n\nfunction AddClient() {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    errors\n  } = useForm();\n  const history = useHistory();\n\n  const onSubmit = data => {\n    addClient(data).then(res => {\n      toast.success(`Add Client ${res.firstName} !`);\n      history.push(`/clients/${res.clientId}`);\n    }).catch(error => {\n      toast.error(\"Something went wrong! Add Client\");\n      history.push({\n        pathname: \"/error\",\n        state: {\n          detail: error.message\n        }\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card card-primary\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card-title\",\n          children: \"Add Client\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"exampleInputfirstName\",\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"exampleInputfirstName\",\n              placeholder: \"First Name\",\n              name: \"firstName\",\n              ref: register({\n                required: {\n                  message: \"This field is required\",\n                  value: true\n                },\n                maxLength: {\n                  message: \"This field cannot exceed 20 characters\",\n                  value: 20\n                },\n                minLength: {\n                  message: \"This field cannot be less then 3 characters\",\n                  value: 3\n                },\n                pattern: {\n                  message: \"Alphabetical characters only\",\n                  value: /^[A-Za-z]+$/i\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), errors.firstName && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-danger\",\n              children: errors.firstName.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"exampleInputlastName\",\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"exampleInputlastName\",\n              placeholder: \"Last Name\",\n              name: \"lastName\",\n              ref: register({\n                required: {\n                  message: \"This field is required\",\n                  value: true\n                },\n                maxLength: {\n                  message: \"This field cannot exceed 20 characters\",\n                  value: 20\n                },\n                minLength: {\n                  message: \"This field cannot be less then 3 characters\",\n                  value: 3\n                },\n                pattern: {\n                  message: \"Alphabetical characters only\",\n                  value: /^[A-Za-z]+$/i\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), errors.lastName && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-danger\",\n              children: errors.lastName.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"exampleInputemail\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: \"form-control\",\n              id: \"exampleInputemail\",\n              placeholder: \"Email\",\n              name: \"email\",\n              ref: register({\n                required: {\n                  message: \"This field is required\",\n                  value: true\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), errors.email && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-danger\",\n              children: errors.email.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"exampleInputphone\",\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"form-control\",\n              id: \"exampleInputPhoneNo\",\n              placeholder: \"Phone\",\n              name: \"phoneNo\",\n              ref: register({\n                required: {\n                  message: \"This field is required\",\n                  value: true\n                },\n                minLength: {\n                  message: \"This field cannot be less then 4 digits\",\n                  value: 4\n                },\n                maxLength: {\n                  message: \"This field cannot exceed 15 characters\",\n                  value: 15\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), errors.phoneNo && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-danger\",\n              children: errors.phoneNo.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-footer\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddClient, \"gtBZVcvz8XgMD9cvORvjeeyhRpk=\", false, function () {\n  return [useForm, useHistory];\n});\n\n_c = AddClient;\nexport default AddClient;\n\nasync function addClient(data) {\n  const response = await axios.post(apiRoute.clients, data);\n  return response.data;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AddClient\");","map":{"version":3,"sources":["/home/iulian/IdeaProjects/dashBoardBarberShop/src/pages/AddClient.js"],"names":["React","axios","apiRoute","useHistory","useForm","Controller","toast","AddClient","register","handleSubmit","control","errors","history","onSubmit","data","addClient","then","res","success","firstName","push","clientId","catch","error","pathname","state","detail","message","required","value","maxLength","minLength","pattern","lastName","email","phoneNo","response","post","clients"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"../api/axios\";\nimport apiRoute from \"../api/apiRoute\";\nimport { useHistory } from \"react-router-dom\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { toast } from \"react-toastify\";\n\nfunction AddClient() {\n  const { register, handleSubmit,control, errors } = useForm();\n  const history = useHistory();\n\n  const onSubmit = (data) => {\n    addClient(data)\n      .then((res) => {\n        toast.success(`Add Client ${res.firstName} !`);\n        history.push(`/clients/${res.clientId}`);\n      })\n      .catch((error) => {\n        toast.error(\"Something went wrong! Add Client\");\n        history.push({\n          pathname: \"/error\",\n          state: { detail: error.message },\n        });\n      });\n  };\n\n  return (\n    <div className=\"content-wrapper\">\n      <div className=\"card card-primary\">\n        <div className=\"card-header\">\n          <h3 className=\"card-title\">Add Client</h3>\n        </div>\n\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"card-body\">\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleInputfirstName\">First Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"exampleInputfirstName\"\n                placeholder=\"First Name\"\n                name=\"firstName\"\n                ref={register({\n                  required: { message: \"This field is required\", value: true },\n                  maxLength: {\n                    message: \"This field cannot exceed 20 characters\",\n                    value: 20,\n                  },\n                  minLength: {\n                    message: \"This field cannot be less then 3 characters\",\n                    value: 3,\n                  },\n                  pattern: {\n                    message: \"Alphabetical characters only\",\n                    value: /^[A-Za-z]+$/i,\n                  },\n                })}\n              />\n              {errors.firstName && (\n                <small className=\"text-danger\">\n                  {errors.firstName.message}\n                </small>\n              )}\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleInputlastName\">Last Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"exampleInputlastName\"\n                placeholder=\"Last Name\"\n                name=\"lastName\"\n                ref={register({\n                  required: { message: \"This field is required\", value: true },\n                  maxLength: {\n                    message: \"This field cannot exceed 20 characters\",\n                    value: 20,\n                  },\n                  minLength: {\n                    message: \"This field cannot be less then 3 characters\",\n                    value: 3,\n                  },\n                  pattern: {\n                    message: \"Alphabetical characters only\",\n                    value: /^[A-Za-z]+$/i,\n                  },\n                })}\n              />\n              {errors.lastName && (\n                <small className=\"text-danger\">{errors.lastName.message}</small>\n              )}\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleInputemail\">Email</label>\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                id=\"exampleInputemail\"\n                placeholder=\"Email\"\n                name=\"email\"\n                ref={register({\n                  required: { message: \"This field is required\", value: true },\n                })}\n              />\n              {errors.email && (\n                <small className=\"text-danger\">{errors.email.message}</small>\n              )}\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleInputphone\">Phone</label>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                id=\"exampleInputPhoneNo\"\n                placeholder=\"Phone\"\n                name=\"phoneNo\"\n                ref={register({\n                  required: { message: \"This field is required\", value: true },\n                  minLength: {\n                    message: \"This field cannot be less then 4 digits\",\n                    value: 4,\n                  },\n                  maxLength: {\n                    message: \"This field cannot exceed 15 characters\",\n                    value: 15,\n                  },\n                })}\n              />\n              {errors.phoneNo && (\n                <small className=\"text-danger\">{errors.phoneNo.message}</small>\n              )}\n            </div>\n          </div>\n          <div className=\"card-footer\">\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default AddClient;\n\nasync function addClient(data) {\n  const response = await axios.post(apiRoute.clients, data);\n\n  return response.data;\n}\n"]},"metadata":{},"sourceType":"module"}