{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/iulian/IdeaProjects/dashBoardBarberShop/src/pages/components/FormProfileModify.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"../../api/axios\";\nimport apiRoute from \"../../api/apiRoute\";\nimport _ from \"lodash/fp\";\n\nfunction FormProfileModify({\n  clientData\n}) {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onSubmit = formData => {\n    let updateData = {\n      clientId: clientData.clientId,\n      firstName: formData.firstName,\n      lastName: formData.lastName,\n      email: formData.email,\n      phoneNo: formData.phoneNo\n    };\n    updateClient(updateData).then(res => {\n      if (res) {\n        window.location.reload();\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form-horizontal\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inputFirstName\",\n        className: \"col-sm-2 col-form-label\",\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"inputFirstName\",\n          defaultValue: clientData.firstName,\n          placeholder: \"First Name\",\n          name: \"firstName\",\n          ref: register({\n            required: true,\n            minLength: 3,\n            maxLength: 20,\n            pattern: /^[A-Za-z]+$/i\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), _.get(\"firstName.type\", errors) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This field is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), _.get(\"firstName.type\", errors) === \"maxLength\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"First name cannot exceed 20 characters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), _.get(\"firstName.type\", errors) === \"minLength\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"First name cannot be less exceed 3 characters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), _.get(\"firstName.type\", errors) === \"pattern\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Alphabetical characters only\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inputLastName\",\n        className: \"col-sm-2 col-form-label\",\n        children: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"inputLastName\",\n          placeholder: \"Last Name\",\n          defaultValue: clientData.lastName,\n          name: \"lastName\",\n          ref: register({\n            required: true,\n            minLength: 3,\n            maxLength: 20,\n            pattern: /^[A-Za-z]+$/i\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), _.get(\"lastName.type\", errors) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This field is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), _.get(\"lastName.type\", errors) === \"maxLength\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Last name cannot exceed 20 characters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), _.get(\"lastName.type\", errors) === \"minLength\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Last name cannot be less exceed 3 characters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), _.get(\"lastName.type\", errors) === \"pattern\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Alphabetical characters only\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inputEmail\",\n        className: \"col-sm-2 col-form-label\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-10\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: \"form-control\",\n          name: \"email\",\n          id: \"inputEmail\",\n          placeholder: \"Email\",\n          defaultValue: clientData.email,\n          ref: register({\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inputPhoneNo\",\n        className: \"col-sm-2 col-form-label\",\n        children: \"Phone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-10\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"inputPhoneNo\",\n          placeholder: \"Phone\",\n          name: \"phoneNo\",\n          defaultValue: clientData.phoneNo,\n          ref: register({\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"offset-sm-2 col-sm-10\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormProfileModify, \"iyH731LTjAbxnbpM16EGorBPneQ=\", false, function () {\n  return [useForm];\n});\n\n_c = FormProfileModify;\nexport default FormProfileModify;\n\nasync function updateClient(updateData) {\n  try {\n    const dataResponse = await axios.put(apiRoute.clients, updateData);\n    return dataResponse.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"FormProfileModify\");","map":{"version":3,"sources":["/home/iulian/IdeaProjects/dashBoardBarberShop/src/pages/components/FormProfileModify.js"],"names":["React","useForm","axios","apiRoute","_","FormProfileModify","clientData","register","handleSubmit","errors","onSubmit","formData","updateData","clientId","firstName","lastName","email","phoneNo","updateClient","then","res","window","location","reload","console","log","required","minLength","maxLength","pattern","get","dataResponse","put","clients","data","error"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"../../api/axios\";\nimport apiRoute from \"../../api/apiRoute\";\nimport _ from \"lodash/fp\";\n\nfunction FormProfileModify({ clientData }) {\n  const { register, handleSubmit, errors } = useForm();\n\n  const onSubmit = (formData) => {\n    let updateData = {\n      clientId: clientData.clientId,\n      firstName: formData.firstName,\n      lastName: formData.lastName,\n      email: formData.email,\n      phoneNo: formData.phoneNo,\n    };\n    updateClient(updateData).then((res) => {\n      if (res) {\n        window.location.reload();\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  return (\n    <form className=\"form-horizontal\" onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"form-group row\">\n        <label htmlFor=\"inputFirstName\" className=\"col-sm-2 col-form-label\">\n          First Name\n        </label>\n        <div className=\"col-sm-10\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"inputFirstName\"\n            defaultValue={clientData.firstName}\n            placeholder=\"First Name\"\n            name=\"firstName\"\n            ref={register({\n              required: true,\n              minLength: 3,\n              maxLength: 20,\n              pattern: /^[A-Za-z]+$/i,\n            })}\n          />\n          {_.get(\"firstName.type\", errors) === \"required\" && (\n            <p>This field is required</p>\n          )}\n          {_.get(\"firstName.type\", errors) === \"maxLength\" && (\n            <p>First name cannot exceed 20 characters</p>\n          )}\n          {_.get(\"firstName.type\", errors) === \"minLength\" && (\n            <p>First name cannot be less exceed 3 characters</p>\n          )}\n          {_.get(\"firstName.type\", errors) === \"pattern\" && (\n            <p>Alphabetical characters only</p>\n          )}\n        </div>\n      </div>\n      <div className=\"form-group row\">\n        <label htmlFor=\"inputLastName\" className=\"col-sm-2 col-form-label\">\n          Last Name\n        </label>\n        <div className=\"col-sm-10\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"inputLastName\"\n            placeholder=\"Last Name\"\n            defaultValue={clientData.lastName}\n            name=\"lastName\"\n            ref={register({\n              required: true,\n              minLength: 3,\n              maxLength: 20,\n              pattern: /^[A-Za-z]+$/i,\n            })}\n          />\n          {_.get(\"lastName.type\", errors) === \"required\" && (\n            <p>This field is required</p>\n          )}\n          {_.get(\"lastName.type\", errors) === \"maxLength\" && (\n            <p>Last name cannot exceed 20 characters</p>\n          )}\n          {_.get(\"lastName.type\", errors) === \"minLength\" && (\n            <p>Last name cannot be less exceed 3 characters</p>\n          )}\n          {_.get(\"lastName.type\", errors) === \"pattern\" && (\n            <p>Alphabetical characters only</p>\n          )}\n        </div>\n      </div>\n      <div className=\"form-group row\">\n        <label htmlFor=\"inputEmail\" className=\"col-sm-2 col-form-label\">\n          Email\n        </label>\n        <div className=\"col-sm-10\">\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            name=\"email\"\n            id=\"inputEmail\"\n            placeholder=\"Email\"\n            defaultValue={clientData.email}\n            ref={register({ required: true })}\n          />\n        </div>\n      </div>\n      <div className=\"form-group row\">\n        <label htmlFor=\"inputPhoneNo\" className=\"col-sm-2 col-form-label\">\n          Phone\n        </label>\n        <div className=\"col-sm-10\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"inputPhoneNo\"\n            placeholder=\"Phone\"\n            name=\"phoneNo\"\n            defaultValue={clientData.phoneNo}\n            ref={register({ required: true })}\n          />\n        </div>\n      </div>\n      <div className=\"form-group row\">\n        <div className=\"offset-sm-2 col-sm-10\">\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Update\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default FormProfileModify;\n\nasync function updateClient(updateData) {\n  try {\n    const dataResponse = await axios.put(apiRoute.clients, updateData);\n    return dataResponse.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}